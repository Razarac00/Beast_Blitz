// <auto-generated />
using System;
using Beast_Blitz.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Beast_Blitz.Data.Migrations
{
    [DbContext(typeof(Beast_Blitz_DbContext))]
    [Migration("20190917020120_petannotations")]
    partial class petannotations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Beast_Blitz.Domain.Abstracts.Item", b =>
                {
                    b.Property<int>("ItemID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BuyCost");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Image");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("ItemID");

                    b.ToTable("Items");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Item");
                });

            modelBuilder.Entity("Beast_Blitz.Domain.Abstracts.Location", b =>
                {
                    b.Property<int>("LocationID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("LocationID");

                    b.ToTable("Locations");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Location");
                });

            modelBuilder.Entity("Beast_Blitz.Domain.Abstracts.Monster", b =>
                {
                    b.Property<int>("MonsterID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BattleStatsID");

                    b.Property<string>("Color")
                        .IsRequired();

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<int?>("SpeciesID");

                    b.HasKey("MonsterID");

                    b.HasIndex("BattleStatsID");

                    b.HasIndex("SpeciesID");

                    b.ToTable("Monsters");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Monster");
                });

            modelBuilder.Entity("Beast_Blitz.Domain.Abstracts.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.HasKey("UserID");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");
                });

            modelBuilder.Entity("Beast_Blitz.Domain.Models.BattleStats", b =>
                {
                    b.Property<int>("BattleStatsID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Attack");

                    b.Property<int>("Defense");

                    b.Property<int>("Experience");

                    b.Property<int>("ExperienceNeeded");

                    b.Property<int>("Health");

                    b.Property<int>("Level");

                    b.Property<int>("Magic");

                    b.Property<int>("MaxHealth");

                    b.Property<int>("MaxMagic");

                    b.Property<int>("Speed");

                    b.HasKey("BattleStatsID");

                    b.ToTable("BattleStats");
                });

            modelBuilder.Entity("Beast_Blitz.Domain.Models.CareStats", b =>
                {
                    b.Property<int>("CareStatsID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cleanliness");

                    b.Property<int>("Fullness");

                    b.Property<int>("Happiness");

                    b.Property<DateTime>("LastFed");

                    b.Property<DateTime>("LastPlayed");

                    b.HasKey("CareStatsID");

                    b.ToTable("CareStats");
                });

            modelBuilder.Entity("Beast_Blitz.Domain.Models.Element", b =>
                {
                    b.Property<int>("ElementID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("ElementID");

                    b.ToTable("Elements");
                });

            modelBuilder.Entity("Beast_Blitz.Domain.Models.ShopItem", b =>
                {
                    b.Property<int>("LocationID");

                    b.Property<int>("ItemID");

                    b.HasKey("LocationID", "ItemID");

                    b.HasIndex("ItemID");

                    b.ToTable("ShopItem");
                });

            modelBuilder.Entity("Beast_Blitz.Domain.Models.Species", b =>
                {
                    b.Property<int>("SpeciesID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BaseStatsBattleStatsID");

                    b.Property<int?>("ElementID");

                    b.Property<string>("Image");

                    b.Property<string>("Name");

                    b.HasKey("SpeciesID");

                    b.HasIndex("BaseStatsBattleStatsID");

                    b.HasIndex("ElementID");

                    b.ToTable("Species");
                });

            modelBuilder.Entity("Beast_Blitz.Domain.Models.UserItem", b =>
                {
                    b.Property<int>("UserID");

                    b.Property<int>("ItemID");

                    b.HasKey("UserID", "ItemID");

                    b.HasIndex("ItemID");

                    b.ToTable("UserItem");
                });

            modelBuilder.Entity("Beast_Blitz.Domain.Abstracts.Accessory", b =>
                {
                    b.HasBaseType("Beast_Blitz.Domain.Abstracts.Item");

                    b.HasDiscriminator().HasValue("Accessory");
                });

            modelBuilder.Entity("Beast_Blitz.Domain.Models.Food", b =>
                {
                    b.HasBaseType("Beast_Blitz.Domain.Abstracts.Item");

                    b.Property<int>("FullnessAmt");

                    b.HasDiscriminator().HasValue("Food");
                });

            modelBuilder.Entity("Beast_Blitz.Domain.Models.Potion", b =>
                {
                    b.HasBaseType("Beast_Blitz.Domain.Abstracts.Item");

                    b.Property<int>("Amt");

                    b.Property<string>("Stat");

                    b.HasDiscriminator().HasValue("Potion");
                });

            modelBuilder.Entity("Beast_Blitz.Domain.Models.Treat", b =>
                {
                    b.HasBaseType("Beast_Blitz.Domain.Abstracts.Item");

                    b.Property<int>("HappinessAmt");

                    b.HasDiscriminator().HasValue("Treat");
                });

            modelBuilder.Entity("Beast_Blitz.Domain.Models.Battlefield", b =>
                {
                    b.HasBaseType("Beast_Blitz.Domain.Abstracts.Location");

                    b.Property<int?>("BossMonsterID");

                    b.HasIndex("BossMonsterID");

                    b.HasDiscriminator().HasValue("Battlefield");
                });

            modelBuilder.Entity("Beast_Blitz.Domain.Models.Home", b =>
                {
                    b.HasBaseType("Beast_Blitz.Domain.Abstracts.Location");

                    b.HasDiscriminator().HasValue("Home");
                });

            modelBuilder.Entity("Beast_Blitz.Domain.Models.Shop", b =>
                {
                    b.HasBaseType("Beast_Blitz.Domain.Abstracts.Location");

                    b.HasDiscriminator().HasValue("Shop");
                });

            modelBuilder.Entity("Beast_Blitz.Domain.Models.Enemy", b =>
                {
                    b.HasBaseType("Beast_Blitz.Domain.Abstracts.Monster");

                    b.Property<int?>("BattlefieldLocationID");

                    b.Property<int>("CoinReward");

                    b.HasIndex("BattlefieldLocationID");

                    b.HasDiscriminator().HasValue("Enemy");
                });

            modelBuilder.Entity("Beast_Blitz.Domain.Models.Pet", b =>
                {
                    b.HasBaseType("Beast_Blitz.Domain.Abstracts.Monster");

                    b.Property<DateTime>("Birthday");

                    b.Property<int?>("CareStatsID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int?>("PlayerUserID");

                    b.HasIndex("CareStatsID");

                    b.HasIndex("PlayerUserID");

                    b.HasDiscriminator().HasValue("Pet");
                });

            modelBuilder.Entity("Beast_Blitz.Domain.Models.Admin", b =>
                {
                    b.HasBaseType("Beast_Blitz.Domain.Abstracts.User");

                    b.HasDiscriminator().HasValue("Admin");
                });

            modelBuilder.Entity("Beast_Blitz.Domain.Models.Player", b =>
                {
                    b.HasBaseType("Beast_Blitz.Domain.Abstracts.User");

                    b.Property<int>("Coins");

                    b.HasDiscriminator().HasValue("Player");
                });

            modelBuilder.Entity("Beast_Blitz.Domain.Models.Armor", b =>
                {
                    b.HasBaseType("Beast_Blitz.Domain.Abstracts.Accessory");

                    b.Property<int>("Defense");

                    b.HasDiscriminator().HasValue("Armor");
                });

            modelBuilder.Entity("Beast_Blitz.Domain.Models.Hat", b =>
                {
                    b.HasBaseType("Beast_Blitz.Domain.Abstracts.Accessory");

                    b.Property<int>("Happiness");

                    b.HasDiscriminator().HasValue("Hat");
                });

            modelBuilder.Entity("Beast_Blitz.Domain.Models.Boss", b =>
                {
                    b.HasBaseType("Beast_Blitz.Domain.Models.Enemy");

                    b.Property<int?>("RewardItemID");

                    b.HasIndex("RewardItemID");

                    b.HasDiscriminator().HasValue("Boss");
                });

            modelBuilder.Entity("Beast_Blitz.Domain.Abstracts.Monster", b =>
                {
                    b.HasOne("Beast_Blitz.Domain.Models.BattleStats", "BattleStats")
                        .WithMany()
                        .HasForeignKey("BattleStatsID");

                    b.HasOne("Beast_Blitz.Domain.Models.Species", "Species")
                        .WithMany()
                        .HasForeignKey("SpeciesID");
                });

            modelBuilder.Entity("Beast_Blitz.Domain.Models.ShopItem", b =>
                {
                    b.HasOne("Beast_Blitz.Domain.Abstracts.Item", "Item")
                        .WithMany("ShopItems")
                        .HasForeignKey("ItemID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Beast_Blitz.Domain.Models.Shop", "Shop")
                        .WithMany("ShopItems")
                        .HasForeignKey("LocationID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Beast_Blitz.Domain.Models.Species", b =>
                {
                    b.HasOne("Beast_Blitz.Domain.Models.BattleStats", "BaseStats")
                        .WithMany()
                        .HasForeignKey("BaseStatsBattleStatsID");

                    b.HasOne("Beast_Blitz.Domain.Models.Element", "Element")
                        .WithMany()
                        .HasForeignKey("ElementID");
                });

            modelBuilder.Entity("Beast_Blitz.Domain.Models.UserItem", b =>
                {
                    b.HasOne("Beast_Blitz.Domain.Abstracts.Item", "Item")
                        .WithMany("UserItems")
                        .HasForeignKey("ItemID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Beast_Blitz.Domain.Models.Player", "Player")
                        .WithMany("UserItems")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Beast_Blitz.Domain.Models.Battlefield", b =>
                {
                    b.HasOne("Beast_Blitz.Domain.Models.Boss", "Boss")
                        .WithMany()
                        .HasForeignKey("BossMonsterID");
                });

            modelBuilder.Entity("Beast_Blitz.Domain.Models.Enemy", b =>
                {
                    b.HasOne("Beast_Blitz.Domain.Models.Battlefield")
                        .WithMany("Enemies")
                        .HasForeignKey("BattlefieldLocationID");
                });

            modelBuilder.Entity("Beast_Blitz.Domain.Models.Pet", b =>
                {
                    b.HasOne("Beast_Blitz.Domain.Models.CareStats", "CareStats")
                        .WithMany()
                        .HasForeignKey("CareStatsID");

                    b.HasOne("Beast_Blitz.Domain.Models.Player")
                        .WithMany("Pets")
                        .HasForeignKey("PlayerUserID");
                });

            modelBuilder.Entity("Beast_Blitz.Domain.Models.Boss", b =>
                {
                    b.HasOne("Beast_Blitz.Domain.Abstracts.Item", "Reward")
                        .WithMany()
                        .HasForeignKey("RewardItemID");
                });
#pragma warning restore 612, 618
        }
    }
}
